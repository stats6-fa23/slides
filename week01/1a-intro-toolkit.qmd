---
title: "Introduction to the Toolkit"
author: "Dr. Mine Dogucu"
execute:
  echo: true
format: 
  revealjs:
    footer: "[introdata.science](https://introdata.science)"
    slide-number: true
    incremental: true
    theme: ["../templates/slide-style.scss"]
    logo: "https://www.introdata.science/img/logo.png"
    title-slide-attributes: 
      data-background-image: "https://www.introdata.science/img/logo.png"
      data-background-size: 5%
      data-background-position: 50% 85%
    include-after-body: "../templates/clean_title_page.html"
---

```{r}
#| echo: false
library(DiagrammeR)
library(DiagrammeRsvg)
library(rsvg)
```

# Getting to Know Each Other

## Merhaba

Hello\
`Private Sub Form_Load() MsgBox "Hello, World!" End Sub`\
Hallo\
مرحبا\
`print('Hello world')`\
नमस्ते & السلام عليكم\
`print("Hello world")`\
`<html> Hello world</html>`\
¡Hola!\
سلام

## Meet and Greet Each Other

In groups three or four meet and greet each other.

Include

Your name\
Your year\
I live ...\
My favorite thing about UCI is ...\
I am awesome because ...

Find something in common between all of you by expanding the conversation.\
Find a difference.

# Getting to Know the Course

## 

::: font100
The most important thing about this course
:::

[The course website](https://introdata.science)

## What is Data Science?

> Data science is an interdisciplinary academic field that uses statistics, scientific computing, scientific methods, processes, algorithms and systems to extract or extrapolate knowledge and insights from noisy, structured, and unstructured data. Wikipedia

## What is Data Science?


> Data science also integrates domain knowledge from the underlying application domain (e.g., natural sciences, information technology, and medicine). Data science is multifaceted and can be described as a science, a research paradigm, a research method, a discipline, a workflow, and a profession. Wikipedia

##

**What types of data will we use in this course** 

We will use a variety of datasets from biological studies to business answering questions serving different purposes in life. Data will come different size, shape, and form and will include numbers, categories, text etc.



##

**Is this a statistics course or a computing course?**

A little bit of both. 

. . .

**Do I need prior programming/statistics experience?**

No



## Example work by students

```{r}
#| echo: false
#| out-width: 80%
#| fig-align: center
knitr::include_graphics("img/student-example2.png")
```

## How to be successful in this course

- Be punctual
- Be organized
- Do the work

## How to make your professor happy

- Be kind
- Be honest


# Getting to Know the Toolbox

## hello woRld

<center>

<video width="80%" height="45%%" align = "center" controls>
  <source src="screencast/01a-hello-world.mp4" type="video/mp4">
</video>

</center>

## Object assignment operator

```{r}
my_apples <- 4
```


. . .

|                            | Windows        | Mac              |
|----------------------------|----------------|------------------|
| Shortcut     | Alt + -        | Option + -       |


## R is case-sensitive


```{r}
#| error: true
My_apples <- 2020 - birth_year

My_apples
```

##

If something comes in quotes, it is not defined in R. 


```{r}

n_apples <- c(7, my_apples, 3)

names <- c("Menglin", "Gloria", "Robert")

data.frame(person = names, apple_count = n_apples)
```


## Vocabulary

```{r eval=FALSE}
do(something)
```

`do()` is a function;   
`something` is the argument of the function.

. . .

```{r eval=FALSE}
do(something, colorful)
```

`do()` is a function;   
`something` is the first argument of the function;   
`colorful` is the second argument of the function.



## Getting Help

In order to get any help we can use `?` followed by function (or object) name. 

```{r eval=FALSE}
?c
```


## tidyverse_style_guide

>canyoureadthissentence?

## tidyverse_style_guide

:::: {.columns}

::: {.column width="40%"}
```{r eval = FALSE}
n_apples <- c(7, my_apples, 3)

names <- c("Menglin", "Gloria", "Robert")

data.frame(person = names, 
           apple_count = n_apples)
```
:::

::: {.column width="60%"}
- After function names do not leave any spaces.

- Before and after operators (e.g. <-, =) leave spaces. 

- Put a space after a comma, **not** before. 

- Object names are all lower case, with words separated by an underscore.

:::

::::
    

## RStudio Setup

<center>

<video width="80%" height="45%%" align = "center" controls>
  <source src="screencast/01b-rstudio-setup.mp4" type="video/mp4">
</video>

</center>

## Quarto

<center>

<video width="80%" height="45%%" align = "center" controls>
  <source src="screencast/01c-intro-quarto.mov" type="video/mp4">
</video>

</center>


## markdown `r fontawesome::fa(name = "markdown")`

:::: {.columns}

::: {.column width="40%"}

```

_Hello world_ 

__Hello world__

~~Hello world~~ 
```
:::

::: {.column width="60%"}
_Hello world_ 

__Hello world__

~~Hello world~~ 
:::

::::

## Quarto parts

```{r}
#| echo: false
knitr::include_graphics("img/quarto.001.png")
```

## Quarto parts

```{r}
#| echo: false
knitr::include_graphics("img/quarto.002.png")
```

## Quarto parts

```{r}
#| echo: false
knitr::include_graphics("img/quarto.003.png")
```

## Quarto parts

```{r}
#| echo: false
knitr::include_graphics("img/quarto.004.png")
```

## Quarto parts

```{r}
#| echo: false
knitr::include_graphics("img/quarto.005.png")
```

## Quarto parts

```{r}
#| echo: false
knitr::include_graphics("img/quarto.006.png")
```

## Slides for this course

Slides that you are currently looking at are also written in Quarto. You can take a look at them on our course's [GitHub organization](https://github.com/stats6-fa23) in the slides repo.

##

::: {.incremental}

Does this look familiar?

- hw1

- hw1_final

- hw1_final2

- hw1_final3

- hw1_finalwithfinalimages

- hw1_finalestfinal

:::


##

::: {.incremental}

What if we tracked our file with a better names for each version and have only 1 file **hw1**?


- hw1 ***added questions 1 through 5***

- hw1 ***changed question 1 image***

- hw1 ***fixed typos***


We will call the descriptions in italic **commit** messages.

:::


## git vs. GitHub

- git allows us to keep track of different versions of a file(s).

- GitHub is a website where we can store (and share) different versions of the files. 

##

```{r}
#| out.width: '40%'
#| fig.align: 'center' 
#| echo: false
knitr::include_graphics('img/github-illustration.002.jpeg')
```

##

```{r}
#| out.width: '55%'
#| fig.align: 'center'
#| echo: false
knitr::include_graphics('img/github-illustration.003.jpeg')
```

##

```{r}
#| out.width: '55%'
#| fig.align: 'center'
#| echo: false
knitr::include_graphics('img/github-illustration.004.jpeg')
```

##

```{r}
#| out.width: '55%'
#| fig.align: 'center'
#| echo: false
knitr::include_graphics('img/github-illustration.005.jpeg')
```

##

```{r}
#| out.width: '55%'
#| fig.align: 'center'
#| echo: false
knitr::include_graphics('img/github-illustration.006.jpeg')
```

##

```{r}
#| out.width: '55%'
#| fig.align: 'center'
#| echo: false
knitr::include_graphics('img/github-illustration.007.jpeg')
```

## 

::: {.font75}

Demo

:::

We have actually done something similar to this demo before [by cloning the test repo and committing, and pushing](https://uci.yuja.com/V/Video?v=8768277&node=37883581&a=136650542&autoplay=1). 

## 


::: {.font75}

Always use .Rproj file to open projects. Then open the appropriate .qmd / .R file from the Files pane.

:::

## Cloning a repo

**repo** is a short form of repository. Repositories contain all of your project's files as well as each file's revision history.

For this course our daily repos (lecture code, activity etc.) are hosted on Github. 

To **clone** a GitHub repo to our computer, we first copy the cloning link as shown in screencast then start an RStudio project using that link.  

**Cloning** a repo pulls (downloads) all the elements of a repo available at that specific time. 



## Commits

Once you make changes to your repo (e.g. take notes during lecture, answer an activity question) you can take a snapshot of your changes with a commit.

This way if you ever have to go back in version history you have your older commits to get back to. 

This is especially useful, for instance, if you want to go back to an earlier solution you have committed.



## Push

All the commits you make will initially be local (i.e. on your own computer). 

In order for us to see your commits and your final submission on any file, you have to **push** your commits. In other words upload your files at the stage in that specific time.




## (An incomplete) Git/GitHub glossary

**Git:** is software for tracking changes in any set of files

**GitHub:** is an internet host for Git projects.

**repo:** is a short form of repository. Repositories contain all of your project's files as well as each file's revision history.

**clone:** Cloning a repo **pulls** (downloads) all the elements of a repo available at that specific time. 

**commit:** A snapshot of your repo at a specific point in time. We distinguish each commit with a **commit message**. 

**push:** Uploads the latest "committed" state of your repo to GitHub.

##

::: {.font150} 

Do you git it?

::: 

